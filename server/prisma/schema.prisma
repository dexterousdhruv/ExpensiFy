// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  firstName String
  lastName  String
  email     String    @unique
  password  String
  expenses  Expense[]  // 1:n relation to Expense
  budgets   Budget[] // 1:n relation to Budget
}

model Expense {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  expenseName    String
  amount         Float
  budgetCategory String
  deletedAt      DateTime?

  timestamp      Int

  userId String // n:1 relation to User
  user   User   @relation(fields: [userId], references: [id])

  budgetId String // n:1 relation to Budget
  budget   Budget @relation(fields: [budgetId], references: [id])
}

model Budget {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  budgetCategory String
  amountSpent Float     @default(0)
  budgetLimit Float
  deletedAt   DateTime?

  timestamp      Int

  userId String // 1:n relation to User
  user   User   @relation(fields: [userId], references: [id])

  expenses Expense[] // 1:n relation to Expense
}
